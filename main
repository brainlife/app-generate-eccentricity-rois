#!/bin/bash
#PBS -l nodes=1:ppn=4,vmem=16gb,walltime=00:30:00
#PBS -N app-trekker-roi-tracking

# loading a lot of config information purely to better inform if statements on when to run
minDegree=`jq -r '.min_degree' config.json`
maxDegree=`jq -r '.max_degree' config.json`

# these all are strings with the ability to house multiple values, so have to make them loopable
minDegree=(${minDegree})
maxDegree=(${maxDegree})

# identifying number of each loopable variable
num_degs=` expr ${#minDegree[@]}`

# this script will move the appropriate freesurfer files and the eccentricity map into input nifti space and will generate eccentricity ROIs
check_name="ROIrh.Ecc${minDegree[((${num_degs}-1))]}to${maxDegree[((${num_degs}-1))]}.nii.gz"

if [ -z $(find . -maxdepth 1 -name \*"${check_name}"\*) ]; then
	echo "making hemispheric rois"
	echo $FREESURFER_LICENSE > license.txt
	time singularity exec -e -B `pwd`/license.txt:/usr/local/freesurfer/license.txt docker://brainlife/connectome_workbench:1.4.2-freesurfer-update ./eccentricity-roi-generator.sh
fi

# final check
if [ -f ${check_name} ]; then
	echo "tracking complete"
	mv ROI*.nii.gz ./rois/rois/
	mv ./*.func.gii ./*.nii.gz ./raw/
  exit 0
else
   echo "failed"
   exit 1
fi
